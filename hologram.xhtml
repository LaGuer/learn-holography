<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>
	<title>Javascript CGH | Learning Holography</title>
	<meta charset="utf-8" />
	<link rel="stylesheet" href="css/base-style.css" />
	<link rel="stylesheet" href="css/hologram.css" />
	<script src="js/hologram.js"></script>
</head>
<body onload="run()" id="js-cgh">

	<a href="index.xhtml">‚Üê back</a>

	<h2>Javascript CGH</h2>

	<p>
		This is a simple and naive implementation of a hologram generation algorithm,
		based on the principles of physical light propagation.
		The calculation implements <a href="http://lucente.us">Mark Lucente</a>'s
		<a href="http://www.media.mit.edu/spi/SPIPapers/lucente/spie92.pdf">bipolar intensity</a> principle.
		<a href="https://github.com/waldir/learning-holography/blob/master/js/hologram.js">The code</a>
		is extensively commented, albeit somewhat unpolished,
		and is loosely based on a Matlab script by
		<a href="http://graphics.zcu.cz/Member/Petr-Lobaz">Petr Lobaz</a>.
	</p>
	<p>
		The same hologram is generated in several different resolutions,
		for experimentation with
		<a href="http://bit-player.org/wp-content/extras/bph-publications/CompLang-1986-10-Hayes-holograms.pdf">
		aliasing effects</a>.
	</p>

</body>
</html>
